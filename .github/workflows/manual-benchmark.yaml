name: Manual Benchmark

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
        qdrant_version:
            description: "Version of qdrant to benchmark (tags/v1.6.1, <commit-id>, my-branch, docker/v1.5.1, ghcr/dev)"
            default: ghcr/dev
        dataset:
            description: "Dataset to benchmark"
            default: laion-small-clip

jobs:
  runManualBenchmark:
    name: manual benchmark - ${{ inputs.qdrant_version }} - ${{ inputs.dataset }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Setup monitoring script
        run: |
          echo '#!/bin/bash' > monitor.sh
          echo 'while true; do' >> monitor.sh
          echo '  echo "CPU usage at $(date):" >> system_resources.log' >> monitor.sh
          echo '  top -b -n 1 | head -n 20 >> system_resources.log' >> monitor.sh
          echo '  echo "" >> system_resources.log' >> monitor.sh
          echo '  echo "Memory usage at $(date):" >> system_resources.log' >> monitor.sh
          echo '  free -h >> system_resources.log' >> monitor.sh
          echo '  echo "" >> system_resources.log' >> monitor.sh
          echo '  echo "Disk usage at $(date):" >> system_resources.log' >> monitor.sh
          echo '  df -h >> system_resources.log' >> monitor.sh
          echo '  sleep 10' >> monitor.sh
          echo 'done' >> monitor.sh
          chmod +x monitor.sh
      - name: Start monitoring in background
        run: ./monitor.sh &
      - name: Benches
        run: |
          export HCLOUD_TOKEN=${{ secrets.HCLOUD_TOKEN }}
          export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          export POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          export QDRANT_VERSION=${{ inputs.qdrant_version }}
          export DATASETS=${{ inputs.dataset }}
          export POSTGRES_TABLE=benchmark_manual
          bash -x tools/setup_ci.sh
          bash -x tools/run_ci.sh
      - name: Stop monitoring
        run: |
          pkill -f monitor.sh
      - name: Display resource log
        run: cat system_resources.log
      - name: Upload system resource log
        uses: actions/upload-artifact@v2
        with:
          name: system-resources-log
          path: system_resources.log

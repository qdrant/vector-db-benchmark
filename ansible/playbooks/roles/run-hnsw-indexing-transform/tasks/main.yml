---
- name: Ensure directories exist with proper permissions
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
    mode: '0755'
    recurse: yes
  loop:
    - "{{ logging_dir }}"
    - "{{ working_dir }}"
    - "{{ working_dir }}/data"
    - "{{ working_dir }}/data/{{ dataset_name }}"
    - "{{ working_dir }}/data/{{ dataset_2_name }}"

- name: Check if the dataset archive already exists
  ansible.builtin.stat:
    path: "{{ working_dir }}/data/{{ dataset_name }}.tgz"
  register: archive_stat

- name: Download the archive
  ansible.builtin.get_url:
    url: "{{ dataset_url }}"
    dest: "{{ working_dir }}/data/{{ dataset_name }}.tgz"
  when: not archive_stat.stat.exists

- name: Check if the destination dataset directory is empty
  ansible.builtin.find:
    paths: "{{ working_dir }}/data/{{ dataset_name }}"
    file_type: any
  register: dest_dir_contents

- name: Extract the archive
  ansible.builtin.unarchive:
    src: "{{ working_dir }}/data/{{ dataset_name }}.tgz"
    dest: "{{ working_dir }}/data/{{ dataset_name }}"
    remote_src: yes
    owner: "{{ ansible_user }}"
  when: dest_dir_contents.matched == 0

- name: Check if the second dataset archive already exists
  ansible.builtin.stat:
    path: "{{ working_dir }}/data/{{ dataset_2_name }}.tgz"
  register: archive_2_stat

- name: Download the second archive
  ansible.builtin.get_url:
    url: "{{ dataset_2_url }}"
    dest: "{{ working_dir }}/data/{{ dataset_2_name }}.tgz"
  when: not archive_2_stat.stat.exists

- name: Check if the second destination dataset directory is empty
  ansible.builtin.find:
    paths: "{{ working_dir }}/data/{{ dataset_2_name }}"
    file_type: any
  register: dest_2_dir_contents

- name: Extract the second archive
  ansible.builtin.unarchive:
    src: "{{ working_dir }}/data/{{ dataset_2_name }}.tgz"
    dest: "{{ working_dir }}/data/{{ dataset_2_name }}"
    remote_src: yes
    owner: "{{ ansible_user }}"
  when: dest_2_dir_contents.matched == 0

- name: Prepare and execute the benchmark
  ansible.builtin.include_role:
    name: run-hnsw-indexing-common
